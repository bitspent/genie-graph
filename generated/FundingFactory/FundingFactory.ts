// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FundingCreated extends ethereum.Event {
  get params(): FundingCreated__Params {
    return new FundingCreated__Params(this);
  }
}

export class FundingCreated__Params {
  _event: FundingCreated;

  constructor(event: FundingCreated) {
    this._event = event;
  }

  get funding(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get interestToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class FundingFactory extends ethereum.SmartContract {
  static bind(address: Address): FundingFactory {
    return new FundingFactory("FundingFactory", address);
  }

  createFunding(_cToken: Address, _operator: Address): Address {
    let result = super.call(
      "createFunding",
      "createFunding(address,address):(address)",
      [
        ethereum.Value.fromAddress(_cToken),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toAddress();
  }

  try_createFunding(
    _cToken: Address,
    _operator: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createFunding",
      "createFunding(address,address):(address)",
      [
        ethereum.Value.fromAddress(_cToken),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class CreateFundingCall extends ethereum.Call {
  get inputs(): CreateFundingCall__Inputs {
    return new CreateFundingCall__Inputs(this);
  }

  get outputs(): CreateFundingCall__Outputs {
    return new CreateFundingCall__Outputs(this);
  }
}

export class CreateFundingCall__Inputs {
  _call: CreateFundingCall;

  constructor(call: CreateFundingCall) {
    this._call = call;
  }

  get _cToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _operator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreateFundingCall__Outputs {
  _call: CreateFundingCall;

  constructor(call: CreateFundingCall) {
    this._call = call;
  }

  get fundingAddress(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
