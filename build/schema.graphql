type Pool @entity {
  id: ID!
  txHash: Bytes! # address
  createdAt: Int!
  address: Bytes! # address
  owner: Bytes! # address
  operator: Bytes! # address
  interestToken: Bytes! # address
  totalStaked: BigInt!
  numberOfPlayers: Int!
}


type Deposit @entity {
  id: ID!
  txHash: Bytes! # address
  createdAt: Int!
  pool: Bytes! #address
  sender: Bytes! # address
  amount: BigInt! # address
  userId: String
}

type Withdraw @entity {
  id: ID!
  txHash: Bytes! # address
  createdAt: Int!
  pool: Bytes! #address
  sender: Bytes! # address
  amount: BigInt! # address
}

type Reward @entity {
  id: ID!
  txHash: Bytes! # address
  createdAt: Int!
  pool: Bytes! #address
  receiver: Bytes! # address
  amount: BigInt! # address
}

type AccountPool @entity {
  "Concatenation of pool address and user address"
  id: ID!
  poolAddress: Bytes!
  account: Account!
  balance: BigInt!
}

type Account @entity {
  id: ID!
  address: Bytes!
  pools: [AccountPool!]! @derivedFrom(field: "account")
}